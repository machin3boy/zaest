import "./aes" as aes;
import "./field_to_u8_16" as field_to_u8_16;
import "utils/pack/u32/unpack128" as unpack128;
import "hashes/sha256/sha256Padded" as sha256;

def aes_four_fields(field inputA, field inputB, field inputC, field inputD, field masterKey) -> field[4] {

    field cipherA = aes(inputA, masterKey);
    field cipherB = aes(inputB, masterKey);
    field cipherC = aes(inputC, masterKey);
    field cipherD = aes(inputD, masterKey);
    
    return [cipherA, cipherB, cipherC, cipherD];
}

/*
function implemented:

function(
    public field PBK, private field u,
    private field d', private field up,
    private field ar, private field v,
    public field o, public field a,
    public field c, public field h_key,
    public field h_ru, public field h_da,
    public field h_dp, public field h_ipfs_d) {
        prove that:
            1. h_key == hash(PBK++u)
            2. h_ru == hash(d' ++ up() ++ ar ++ v)
            3. o == hash(v ++ u)
            4. a == encrypt_AES(d', u)
            5. h_da == hash(d' ++ a ++ u)
            6. h_dp == hash(d')
            7. h_ipfs_d == hash(a ++ o ++ c)
}
*/

def main(private field u, private field dPrimeA, private field dPrimeB, private field dPrimeC, private field dPrimeD) -> field[4] {

    return aes_four_fields(dPrimeA, dPrimeB, dPrimeC, dPrimeD, u);
}


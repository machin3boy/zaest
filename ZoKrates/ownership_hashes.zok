import "./hash_512" as hash512;
import "./hash_1536" as hash1536;
import "./hash_2560" as hash2560;

/*
function implemented:

function( private field u, public field PBK,
    private field v, public field n,
    private field d, public field o,
    public field a, public field e_rs,
    public field c, public field h_key,
    public field h_tx, public field h_da,
    public field h_dn, public field h_ipfs_p){
    prove that:
        1. h_key == hash(PBK ++ u)
        2. h_tx == hash(v ++ n)
        3. o == hash(v ++ u)
        4. h_da == hash(d ++ a ++ u)
        5. h_dn == hash(d ++ v ++ n)
        6. h_ipfs_p == hash(e_rs ++ c)
}

*/

def main(field PBK_A, field PBK_B, private field u, private field dA, private field dB, private field dC, private field dD, private field dE, private field dF, private field dG, private field dH, private field vA, private field vB, field aA, field aB, field aC, field aD, field aE, field aF, field aG, field aH, field oA, field oB, field n, field h_keyA, field h_keyB, field h_txA, field h_txB, field h_daA, field h_daB, field h_dnA, field h_dnB, field padding) -> bool {  

    bool condition1         = hash512(PBK_A, PBK_B, u, padding) == [h_keyA, h_keyB];
    bool condition2         = hash512(vA, vB, n, padding) == [h_txA, h_txB];
    bool condition3         = hash512(vA, vB, u, padding) == [oA, oB];
    bool condition4         = hash2560(dA, dB, dC, dD, dE, dF, dG, dH, aA, aB, aC, aD, aE, aF, aG, aH, u, padding, padding, padding) == [h_daA, h_daB];
    bool condition5         = hash1536(dA, dB, dC, dD, dE, dF, dG, dH, vA, vB, n, padding) == [h_dnA, h_dnB];

    return (condition1 && condition2 && condition3 && condition4 && condition5);
}


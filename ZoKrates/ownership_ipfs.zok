import "./hash_1536" as hash1536;

/*
hash lengths:

PBK     = 40  bytes cut down to 32 bytes = 256 bits
u       = 16  bytes = 128 bits           = 256 bits padded
d'      = 128 bytes = 1024 bits          = 1024 bits
up      = 10  bytes = 80  bits           = 256 bits padded
ar      = 10  bytes = 80  bits           = 256 bits padded
t-limit = 4   bytes = 16  bits           = 256 bits padded
o       = 32  bytes = 256 bits           = 256 bits padded
a       = 128 bytes = 1024 bits          = 1024 bits
v       = 20  bytes = 160 bits           = 256 bits padded
n       = 10  bytes = 80  bits           = 256 bits padded
c       = 60  bytes = 480 bits           = 512 bits padded
e_rs    = 128 bytes = 1024 bits          = 1024 bits padded

h_key       ->      PBK ++ u        -> 256 + 256        = 512               -> 512 
h_ru        -> d'++up++ar++v++t_lim -> 1024 + 256 + 256 + 256 + 256 = 2048  -> 2048
o           ->      v  ++  u        -> 256 + 256        = 512               -> 512 
h_da        ->    d' ++ a ++ u      -> 1024+1024+256    = 2304 bits         -> 2560
h_dp        ->         d'           -> 1024             = 1024 bits         -> 1024
h_ipfs_d    ->    a  ++ o ++ c      -> 1024+256+512     = 1792 bits         -> 2048

h_tx        ->      v  ++  n        -> 256 + 256        = 512 bits          -> 512 
h_dn        ->    d  ++ v ++ n      -> 1024 + 256 + 256 = 1536 bits         -> 1536
h_ipfs_p    ->     e_rs ++ c        -> 1024 + 512       = 1536 bits         -> 1536
*/

/*
function implemented:

function( private field u, public field PBK,
    private field v, public field n,
    private field d, public field o,
    public field a, public field e_rs,
    public field c, public field h_key,
    public field h_tx, public field h_da,
    public field h_dn, public field h_ipfs_p){
    prove that:
        1. h_key == hash(PBK ++ u)
        2. h_tx == hash(v ++ n)
        3. o == hash(v ++ u)
        4. h_da == hash(d ++ a ++ u)
        5. h_dn == hash(d ++ v ++ n)
        6. h_ipfs_p == hash(e_rs ++ c)
}

*/

def main(field e_rsA, field e_rsB, field e_rsC, field e_rsD, field cA, field cB, field h_ipfs_p) -> bool {   
    //condition 6
    return hash1536(e_rsA, e_rsB, e_rsC, e_rsD, cA, cB) == h_ipfs_p;
}

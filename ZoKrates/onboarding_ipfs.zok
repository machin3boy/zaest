import "./field_to_u8_16" as field_to_u8_16;
import "utils/pack/u32/unpack128" as unpack128;
import "hashes/sha256/sha256Padded" as sha256;

/*
function implemented:

function(
    public field PBK, private field u,
    private field d', private field up,
    private field ar, private field v,
    public field o, public field a,
    public field c, public field h_key,
    public field h_ru, public field h_da,
    public field h_dp, public field h_ipfs_d) {
        prove that:
            1. h_key == hash(PBK++u)
            2. h_ru == hash(d' ++ up() ++ ar ++ v)
            3. o == hash(v ++ u)
            4. a == encrypt_AES(d', u)
            5. h_da == hash(d' ++ a ++ u)
            6. h_dp == hash(d')
            7. h_ipfs_d == hash(a ++ o ++ c)
}
*/

def main(field aA, field aB, field aC, field aD, field oA, field oB, field cA, field cB, field cC, field cD, field h_ipfs_dA, field h_ipfs_dB) -> bool {  
    //condition 7
    return sha256([...field_to_u8_16(aA), ...field_to_u8_16(aB), ...field_to_u8_16(aC), ...field_to_u8_16(aD), ...field_to_u8_16(oA), ...field_to_u8_16(oB), ...field_to_u8_16(cA), ...field_to_u8_16(cB), ...field_to_u8_16(cC), ...field_to_u8_16(cD)]) == [...unpack128(h_ipfs_dA), ...unpack128(h_ipfs_dB)];
}

